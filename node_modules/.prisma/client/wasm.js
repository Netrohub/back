
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('@prisma/client/runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.18.0
 * Query Engine version: 34b5a692b7bd79939a9a2c3ef97d816e749cda2f
 */
Prisma.prismaVersion = {
  client: "6.18.0",
  engine: "34b5a692b7bd79939a9a2c3ef97d816e749cda2f"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  username: 'username',
  name: 'name',
  email: 'email',
  password: 'password',
  phone: 'phone',
  avatar: 'avatar',
  email_verified_at: 'email_verified_at',
  phone_verified_at: 'phone_verified_at',
  is_active: 'is_active',
  is_banned: 'is_banned',
  banned_until: 'banned_until',
  ban_reason: 'ban_reason',
  last_login_at: 'last_login_at',
  login_attempts: 'login_attempts',
  locked_until: 'locked_until',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.RoleScalarFieldEnum = {
  id: 'id',
  name: 'name',
  slug: 'slug',
  description: 'description',
  permissions: 'permissions',
  is_active: 'is_active',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.UserRoleScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  role_id: 'role_id',
  granted_by: 'granted_by',
  granted_at: 'granted_at',
  expires_at: 'expires_at',
  created_at: 'created_at'
};

exports.Prisma.CategoryScalarFieldEnum = {
  id: 'id',
  name: 'name',
  slug: 'slug',
  description: 'description',
  image: 'image',
  parent_id: 'parent_id',
  sort_order: 'sort_order',
  is_active: 'is_active',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.ProductScalarFieldEnum = {
  id: 'id',
  name: 'name',
  slug: 'slug',
  description: 'description',
  price: 'price',
  discount_price: 'discount_price',
  category_id: 'category_id',
  seller_id: 'seller_id',
  platform: 'platform',
  game: 'game',
  account_level: 'account_level',
  account_username: 'account_username',
  status: 'status',
  stock_quantity: 'stock_quantity',
  delivery_time: 'delivery_time',
  setup_instructions: 'setup_instructions',
  views_count: 'views_count',
  sales_count: 'sales_count',
  rating_avg: 'rating_avg',
  rating_count: 'rating_count',
  is_featured: 'is_featured',
  featured_until: 'featured_until',
  metadata: 'metadata',
  created_at: 'created_at',
  updated_at: 'updated_at',
  deleted_at: 'deleted_at'
};

exports.Prisma.ProductImageScalarFieldEnum = {
  id: 'id',
  product_id: 'product_id',
  image_url: 'image_url',
  alt_text: 'alt_text',
  sort_order: 'sort_order',
  is_primary: 'is_primary',
  created_at: 'created_at'
};

exports.Prisma.ProductReviewScalarFieldEnum = {
  id: 'id',
  product_id: 'product_id',
  user_id: 'user_id',
  order_id: 'order_id',
  rating: 'rating',
  title: 'title',
  comment: 'comment',
  is_verified: 'is_verified',
  helpful_count: 'helpful_count',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.OrderScalarFieldEnum = {
  id: 'id',
  order_number: 'order_number',
  buyer_id: 'buyer_id',
  seller_id: 'seller_id',
  subtotal: 'subtotal',
  service_fee: 'service_fee',
  discount_amount: 'discount_amount',
  total_amount: 'total_amount',
  status: 'status',
  payment_status: 'payment_status',
  payment_method: 'payment_method',
  payment_transaction_id: 'payment_transaction_id',
  buyer_email: 'buyer_email',
  buyer_phone: 'buyer_phone',
  payment_completed_at: 'payment_completed_at',
  delivered_at: 'delivered_at',
  completed_at: 'completed_at',
  cancelled_at: 'cancelled_at',
  refunded_at: 'refunded_at',
  notes: 'notes',
  metadata: 'metadata',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.OrderItemScalarFieldEnum = {
  id: 'id',
  order_id: 'order_id',
  product_id: 'product_id',
  product_name: 'product_name',
  quantity: 'quantity',
  unit_price: 'unit_price',
  total_price: 'total_price',
  metadata: 'metadata',
  created_at: 'created_at'
};

exports.Prisma.TransactionScalarFieldEnum = {
  id: 'id',
  order_id: 'order_id',
  user_id: 'user_id',
  type: 'type',
  amount: 'amount',
  fee_amount: 'fee_amount',
  net_amount: 'net_amount',
  currency: 'currency',
  payment_method: 'payment_method',
  status: 'status',
  reference: 'reference',
  gateway: 'gateway',
  gateway_response: 'gateway_response',
  processed_at: 'processed_at',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.CartItemScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  product_id: 'product_id',
  quantity: 'quantity',
  status: 'status',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.WishlistItemScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  product_id: 'product_id',
  created_at: 'created_at'
};

exports.Prisma.CouponScalarFieldEnum = {
  id: 'id',
  code: 'code',
  name: 'name',
  description: 'description',
  type: 'type',
  value: 'value',
  min_amount: 'min_amount',
  max_discount: 'max_discount',
  usage_limit: 'usage_limit',
  user_limit: 'user_limit',
  used_count: 'used_count',
  is_active: 'is_active',
  starts_at: 'starts_at',
  expires_at: 'expires_at',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.DisputeScalarFieldEnum = {
  id: 'id',
  order_id: 'order_id',
  buyer_id: 'buyer_id',
  seller_id: 'seller_id',
  reason: 'reason',
  description: 'description',
  status: 'status',
  priority: 'priority',
  assigned_to: 'assigned_to',
  resolution: 'resolution',
  resolved_at: 'resolved_at',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.DisputeMessageScalarFieldEnum = {
  id: 'id',
  dispute_id: 'dispute_id',
  sender_id: 'sender_id',
  message: 'message',
  is_internal: 'is_internal',
  created_at: 'created_at'
};

exports.Prisma.DisputeEvidenceScalarFieldEnum = {
  id: 'id',
  dispute_id: 'dispute_id',
  uploaded_by: 'uploaded_by',
  file_url: 'file_url',
  file_name: 'file_name',
  file_type: 'file_type',
  file_size: 'file_size',
  description: 'description',
  created_at: 'created_at'
};

exports.Prisma.TicketScalarFieldEnum = {
  id: 'id',
  ticket_number: 'ticket_number',
  user_id: 'user_id',
  subject: 'subject',
  message: 'message',
  status: 'status',
  priority: 'priority',
  category: 'category',
  assigned_to: 'assigned_to',
  resolved_at: 'resolved_at',
  first_response_at: 'first_response_at',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.TicketMessageScalarFieldEnum = {
  id: 'id',
  ticket_id: 'ticket_id',
  sender_id: 'sender_id',
  message: 'message',
  is_internal: 'is_internal',
  created_at: 'created_at'
};

exports.Prisma.KycVerificationScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  type: 'type',
  status: 'status',
  provider: 'provider',
  external_id: 'external_id',
  data: 'data',
  documents: 'documents',
  notes: 'notes',
  verified_at: 'verified_at',
  rejected_at: 'rejected_at',
  expires_at: 'expires_at',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.PasswordResetScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  token: 'token',
  expires_at: 'expires_at',
  used_at: 'used_at',
  ip_address: 'ip_address',
  user_agent: 'user_agent',
  created_at: 'created_at'
};

exports.Prisma.UserSessionScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  device_name: 'device_name',
  device_type: 'device_type',
  ip_address: 'ip_address',
  user_agent: 'user_agent',
  location: 'location',
  is_active: 'is_active',
  last_activity_at: 'last_activity_at',
  expires_at: 'expires_at',
  created_at: 'created_at'
};

exports.Prisma.AdminActionScalarFieldEnum = {
  id: 'id',
  admin_id: 'admin_id',
  action_type: 'action_type',
  target_type: 'target_type',
  target_id: 'target_id',
  description: 'description',
  metadata: 'metadata',
  ip_address: 'ip_address',
  user_agent: 'user_agent',
  created_at: 'created_at'
};

exports.Prisma.AuditLogScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  action: 'action',
  entity_type: 'entity_type',
  entity_id: 'entity_id',
  old_values: 'old_values',
  new_values: 'new_values',
  ip_address: 'ip_address',
  user_agent: 'user_agent',
  created_at: 'created_at'
};

exports.Prisma.SystemLogScalarFieldEnum = {
  id: 'id',
  level: 'level',
  message: 'message',
  context: 'context',
  user_id: 'user_id',
  ip_address: 'ip_address',
  user_agent: 'user_agent',
  created_at: 'created_at'
};

exports.Prisma.AdminInviteScalarFieldEnum = {
  id: 'id',
  email: 'email',
  invited_by: 'invited_by',
  role_slug: 'role_slug',
  token: 'token',
  expires_at: 'expires_at',
  used_at: 'used_at',
  created_at: 'created_at'
};

exports.Prisma.PayoutScalarFieldEnum = {
  id: 'id',
  seller_id: 'seller_id',
  amount: 'amount',
  fee_amount: 'fee_amount',
  net_amount: 'net_amount',
  currency: 'currency',
  status: 'status',
  method: 'method',
  reference: 'reference',
  description: 'description',
  notes: 'notes',
  requested_at: 'requested_at',
  processed_at: 'processed_at',
  completed_at: 'completed_at',
  failed_at: 'failed_at',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};
exports.ProductStatus = exports.$Enums.ProductStatus = {
  DRAFT: 'DRAFT',
  PENDING: 'PENDING',
  ACTIVE: 'ACTIVE',
  SOLD: 'SOLD',
  INACTIVE: 'INACTIVE',
  REJECTED: 'REJECTED',
  SUSPENDED: 'SUSPENDED'
};

exports.OrderStatus = exports.$Enums.OrderStatus = {
  PENDING: 'PENDING',
  CONFIRMED: 'CONFIRMED',
  PROCESSING: 'PROCESSING',
  SHIPPED: 'SHIPPED',
  DELIVERED: 'DELIVERED',
  COMPLETED: 'COMPLETED',
  CANCELLED: 'CANCELLED',
  REFUNDED: 'REFUNDED'
};

exports.PaymentStatus = exports.$Enums.PaymentStatus = {
  PENDING: 'PENDING',
  PAID: 'PAID',
  FAILED: 'FAILED',
  REFUNDED: 'REFUNDED',
  PARTIAL_REFUND: 'PARTIAL_REFUND'
};

exports.TransactionType = exports.$Enums.TransactionType = {
  PAYMENT: 'PAYMENT',
  REFUND: 'REFUND',
  PAYOUT: 'PAYOUT',
  FEE: 'FEE',
  CHARGEBACK: 'CHARGEBACK'
};

exports.TransactionStatus = exports.$Enums.TransactionStatus = {
  PENDING: 'PENDING',
  PROCESSING: 'PROCESSING',
  COMPLETED: 'COMPLETED',
  FAILED: 'FAILED',
  CANCELLED: 'CANCELLED'
};

exports.CartStatus = exports.$Enums.CartStatus = {
  ACTIVE: 'ACTIVE',
  SAVED_FOR_LATER: 'SAVED_FOR_LATER',
  ABANDONED: 'ABANDONED'
};

exports.CouponType = exports.$Enums.CouponType = {
  PERCENTAGE: 'PERCENTAGE',
  FIXED_AMOUNT: 'FIXED_AMOUNT',
  FREE_SHIPPING: 'FREE_SHIPPING'
};

exports.DisputeStatus = exports.$Enums.DisputeStatus = {
  PENDING: 'PENDING',
  INVESTIGATING: 'INVESTIGATING',
  RESOLVED: 'RESOLVED',
  CLOSED: 'CLOSED',
  ESCALATED: 'ESCALATED'
};

exports.DisputePriority = exports.$Enums.DisputePriority = {
  LOW: 'LOW',
  MEDIUM: 'MEDIUM',
  HIGH: 'HIGH',
  URGENT: 'URGENT'
};

exports.TicketStatus = exports.$Enums.TicketStatus = {
  OPEN: 'OPEN',
  IN_PROGRESS: 'IN_PROGRESS',
  WAITING_FOR_CUSTOMER: 'WAITING_FOR_CUSTOMER',
  RESOLVED: 'RESOLVED',
  CLOSED: 'CLOSED'
};

exports.TicketPriority = exports.$Enums.TicketPriority = {
  LOW: 'LOW',
  MEDIUM: 'MEDIUM',
  HIGH: 'HIGH',
  URGENT: 'URGENT'
};

exports.KycType = exports.$Enums.KycType = {
  EMAIL: 'EMAIL',
  PHONE: 'PHONE',
  IDENTITY: 'IDENTITY',
  ADDRESS: 'ADDRESS',
  BANK_ACCOUNT: 'BANK_ACCOUNT'
};

exports.KycStatus = exports.$Enums.KycStatus = {
  PENDING: 'PENDING',
  IN_PROGRESS: 'IN_PROGRESS',
  APPROVED: 'APPROVED',
  REJECTED: 'REJECTED',
  EXPIRED: 'EXPIRED'
};

exports.LogLevel = exports.$Enums.LogLevel = {
  DEBUG: 'DEBUG',
  INFO: 'INFO',
  WARN: 'WARN',
  ERROR: 'ERROR',
  FATAL: 'FATAL'
};

exports.PayoutStatus = exports.$Enums.PayoutStatus = {
  PENDING: 'PENDING',
  PROCESSING: 'PROCESSING',
  COMPLETED: 'COMPLETED',
  FAILED: 'FAILED',
  CANCELLED: 'CANCELLED'
};

exports.Prisma.ModelName = {
  User: 'User',
  Role: 'Role',
  UserRole: 'UserRole',
  Category: 'Category',
  Product: 'Product',
  ProductImage: 'ProductImage',
  ProductReview: 'ProductReview',
  Order: 'Order',
  OrderItem: 'OrderItem',
  Transaction: 'Transaction',
  CartItem: 'CartItem',
  WishlistItem: 'WishlistItem',
  Coupon: 'Coupon',
  Dispute: 'Dispute',
  DisputeMessage: 'DisputeMessage',
  DisputeEvidence: 'DisputeEvidence',
  Ticket: 'Ticket',
  TicketMessage: 'TicketMessage',
  KycVerification: 'KycVerification',
  PasswordReset: 'PasswordReset',
  UserSession: 'UserSession',
  AdminAction: 'AdminAction',
  AuditLog: 'AuditLog',
  SystemLog: 'SystemLog',
  AdminInvite: 'AdminInvite',
  Payout: 'Payout'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\Users\\p5l\\Desktop\\NXOLand\\nxoland-backend\\node_modules\\@prisma\\client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "C:\\Users\\p5l\\Desktop\\NXOLand\\nxoland-backend\\prisma\\schema.prisma"
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.18.0",
  "engineVersion": "34b5a692b7bd79939a9a2c3ef97d816e749cda2f",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// NXOLand Database Schema v2.0\n// Normalized, scalable, and production-ready database design\n// Following 3NF normalization and modern database practices\n\ngenerator client {\n  provider = \"prisma-client-js\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\n// ========================================\n// 1. CORE USER MANAGEMENT SYSTEM\n// ========================================\n\nmodel User {\n  id                Int       @id @default(autoincrement())\n  username          String    @unique @db.VarChar(50)\n  name              String    @db.VarChar(255)\n  email             String    @unique @db.VarChar(255)\n  password          String    @db.VarChar(255)\n  phone             String?   @db.VarChar(20)\n  avatar            String?   @db.Text\n  email_verified_at DateTime?\n  phone_verified_at DateTime?\n  is_active         Boolean   @default(true)\n  is_banned         Boolean   @default(false)\n  banned_until      DateTime?\n  ban_reason        String?   @db.Text\n  last_login_at     DateTime?\n  login_attempts    Int       @default(0)\n  locked_until      DateTime?\n  created_at        DateTime  @default(now())\n  updated_at        DateTime  @updatedAt\n\n  // Relations\n  user_roles         UserRole[]\n  products           Product[]\n  orders_as_buyer    Order[]           @relation(\"BuyerOrders\")\n  orders_as_seller   Order[]           @relation(\"SellerOrders\")\n  cart_items         CartItem[]\n  wishlist_items     WishlistItem[]\n  product_reviews    ProductReview[]\n  disputes_as_buyer  Dispute[]         @relation(\"BuyerDisputes\")\n  disputes_as_seller Dispute[]         @relation(\"SellerDisputes\")\n  assigned_disputes  Dispute[]         @relation(\"AssignedDisputes\")\n  tickets            Ticket[]          @relation(\"UserTickets\")\n  assigned_tickets   Ticket[]          @relation(\"AssignedTickets\")\n  ticket_messages    TicketMessage[]\n  dispute_messages   DisputeMessage[]\n  kyc_verifications  KycVerification[]\n  password_resets    PasswordReset[]\n  user_sessions      UserSession[]\n  admin_actions      AdminAction[]\n  audit_logs         AuditLog[]\n  payouts            Payout[]\n  transactions       Transaction[]\n\n  @@index([email])\n  @@index([username])\n  @@index([is_active])\n  @@index([created_at])\n  @@map(\"users\")\n}\n\nmodel Role {\n  id          Int      @id @default(autoincrement())\n  name        String   @unique @db.VarChar(50)\n  slug        String   @unique @db.VarChar(50)\n  description String?  @db.Text\n  permissions Json? // Flexible permission structure\n  is_active   Boolean  @default(true)\n  created_at  DateTime @default(now())\n  updated_at  DateTime @updatedAt\n\n  // Relations\n  user_roles UserRole[]\n\n  @@index([slug])\n  @@index([is_active])\n  @@map(\"roles\")\n}\n\nmodel UserRole {\n  id         Int       @id @default(autoincrement())\n  user_id    Int\n  role_id    Int\n  granted_by Int? // Admin who granted this role\n  granted_at DateTime  @default(now())\n  expires_at DateTime? // For temporary roles\n  created_at DateTime  @default(now())\n\n  // Relations\n  user User @relation(fields: [user_id], references: [id], onDelete: Cascade)\n  role Role @relation(fields: [role_id], references: [id], onDelete: Cascade)\n\n  @@unique([user_id, role_id])\n  @@index([user_id])\n  @@index([role_id])\n  @@map(\"user_roles\")\n}\n\n// ========================================\n// 2. PRODUCT MANAGEMENT SYSTEM\n// ========================================\n\nmodel Category {\n  id          Int      @id @default(autoincrement())\n  name        String   @db.VarChar(100)\n  slug        String   @unique @db.VarChar(100)\n  description String?  @db.Text\n  image       String?  @db.VarChar(500)\n  parent_id   Int? // For hierarchical categories\n  sort_order  Int      @default(0)\n  is_active   Boolean  @default(true)\n  created_at  DateTime @default(now())\n  updated_at  DateTime @updatedAt\n\n  // Relations\n  products Product[]\n  parent   Category?  @relation(\"CategoryHierarchy\", fields: [parent_id], references: [id])\n  children Category[] @relation(\"CategoryHierarchy\")\n\n  @@index([slug])\n  @@index([parent_id])\n  @@index([is_active])\n  @@index([sort_order])\n  @@map(\"categories\")\n}\n\nmodel Product {\n  id             Int      @id @default(autoincrement())\n  name           String   @db.VarChar(255)\n  slug           String   @unique @db.VarChar(255)\n  description    String?  @db.Text\n  price          Decimal  @db.Decimal(10, 2)\n  discount_price Decimal? @db.Decimal(10, 2)\n  category_id    Int\n  seller_id      Int\n\n  // Gaming/Social Media specific fields\n  platform         String? @db.VarChar(100) // Instagram, PlayStation, Xbox, etc.\n  game             String? @db.VarChar(100) // Game name for gaming accounts\n  account_level    String? @db.VarChar(50) // Level, rank, or followers count\n  account_username String? @db.VarChar(100) // Account username/handle\n\n  // Product management\n  status             ProductStatus @default(PENDING)\n  stock_quantity     Int           @default(1)\n  delivery_time      String        @default(\"instant\") @db.VarChar(50)\n  setup_instructions String?       @db.Text\n\n  // Metrics\n  views_count  Int     @default(0)\n  sales_count  Int     @default(0)\n  rating_avg   Decimal @default(0.00) @db.Decimal(3, 2)\n  rating_count Int     @default(0)\n\n  // Featured/Promotion\n  is_featured    Boolean   @default(false)\n  featured_until DateTime?\n\n  // Metadata\n  metadata   Json? // Additional flexible data\n  created_at DateTime  @default(now())\n  updated_at DateTime  @updatedAt\n  deleted_at DateTime? // Soft delete\n\n  // Relations\n  category       Category        @relation(fields: [category_id], references: [id], onDelete: Restrict)\n  seller         User            @relation(fields: [seller_id], references: [id], onDelete: Restrict)\n  images         ProductImage[]\n  reviews        ProductReview[]\n  cart_items     CartItem[]\n  order_items    OrderItem[]\n  wishlist_items WishlistItem[]\n  // Full-text search available via PostgreSQL native search or extension\n\n  @@index([category_id])\n  @@index([seller_id])\n  @@index([status])\n  @@index([is_featured])\n  @@index([price])\n  @@index([rating_avg])\n  @@index([views_count])\n  @@index([sales_count])\n  @@index([created_at])\n  @@index([platform])\n  @@map(\"products\")\n}\n\nmodel ProductImage {\n  id         Int      @id @default(autoincrement())\n  product_id Int\n  image_url  String   @db.VarChar(500)\n  alt_text   String?  @db.VarChar(255)\n  sort_order Int      @default(0)\n  is_primary Boolean  @default(false)\n  created_at DateTime @default(now())\n\n  // Relations\n  product Product @relation(fields: [product_id], references: [id], onDelete: Cascade)\n\n  @@index([product_id])\n  @@index([is_primary])\n  @@index([sort_order])\n  @@map(\"product_images\")\n}\n\nmodel ProductReview {\n  id            Int      @id @default(autoincrement())\n  product_id    Int\n  user_id       Int\n  order_id      Int // Must be from a completed order\n  rating        Int // 1-5 stars\n  title         String?  @db.VarChar(255)\n  comment       String?  @db.Text\n  is_verified   Boolean  @default(false) // Verified purchase\n  helpful_count Int      @default(0)\n  created_at    DateTime @default(now())\n  updated_at    DateTime @updatedAt\n\n  // Relations\n  product Product @relation(fields: [product_id], references: [id], onDelete: Cascade)\n  user    User    @relation(fields: [user_id], references: [id], onDelete: Cascade)\n\n  @@unique([user_id, product_id, order_id]) // One review per user per product per order\n  @@index([product_id])\n  @@index([user_id])\n  @@index([rating])\n  @@index([created_at])\n  @@map(\"product_reviews\")\n}\n\n// ========================================\n// 3. ORDER & PAYMENT SYSTEM\n// ========================================\n\nmodel Order {\n  id              Int     @id @default(autoincrement())\n  order_number    String  @unique @db.VarChar(50)\n  buyer_id        Int\n  seller_id       Int\n  subtotal        Decimal @db.Decimal(10, 2)\n  service_fee     Decimal @db.Decimal(10, 2)\n  discount_amount Decimal @default(0.00) @db.Decimal(10, 2)\n  total_amount    Decimal @db.Decimal(10, 2)\n\n  // Status tracking\n  status         OrderStatus   @default(PENDING)\n  payment_status PaymentStatus @default(PENDING)\n\n  // Payment details\n  payment_method         String? @db.VarChar(50)\n  payment_transaction_id String? @db.VarChar(255)\n\n  // Contact info\n  buyer_email String? @db.VarChar(255)\n  buyer_phone String? @db.VarChar(20)\n\n  // Timestamps\n  payment_completed_at DateTime?\n  delivered_at         DateTime?\n  completed_at         DateTime?\n  cancelled_at         DateTime?\n  refunded_at          DateTime?\n\n  // Additional info\n  notes      String?  @db.Text\n  metadata   Json? // Additional order data\n  created_at DateTime @default(now())\n  updated_at DateTime @updatedAt\n\n  // Relations\n  buyer        User          @relation(\"BuyerOrders\", fields: [buyer_id], references: [id], onDelete: Restrict)\n  seller       User          @relation(\"SellerOrders\", fields: [seller_id], references: [id], onDelete: Restrict)\n  items        OrderItem[]\n  transactions Transaction[]\n  disputes     Dispute[]\n\n  @@index([order_number])\n  @@index([buyer_id])\n  @@index([seller_id])\n  @@index([status])\n  @@index([payment_status])\n  @@index([created_at])\n  @@map(\"orders\")\n}\n\nmodel OrderItem {\n  id           Int      @id @default(autoincrement())\n  order_id     Int\n  product_id   Int\n  product_name String   @db.VarChar(255) // Snapshot of product name\n  quantity     Int\n  unit_price   Decimal  @db.Decimal(10, 2)\n  total_price  Decimal  @db.Decimal(10, 2)\n  metadata     Json? // Product snapshot data\n  created_at   DateTime @default(now())\n\n  // Relations\n  order   Order   @relation(fields: [order_id], references: [id], onDelete: Cascade)\n  product Product @relation(fields: [product_id], references: [id], onDelete: Restrict)\n\n  @@index([order_id])\n  @@index([product_id])\n  @@map(\"order_items\")\n}\n\nmodel Transaction {\n  id               Int               @id @default(autoincrement())\n  order_id         Int\n  user_id          Int\n  type             TransactionType\n  amount           Decimal           @db.Decimal(10, 2)\n  fee_amount       Decimal           @default(0.00) @db.Decimal(10, 2)\n  net_amount       Decimal           @db.Decimal(10, 2)\n  currency         String            @default(\"USD\") @db.VarChar(3)\n  payment_method   String            @db.VarChar(50)\n  status           TransactionStatus @default(PENDING)\n  reference        String?           @db.VarChar(255) // External payment reference\n  gateway          String?           @db.VarChar(50) // Tap, Stripe, etc.\n  gateway_response Json? // Raw gateway response\n  processed_at     DateTime?\n  created_at       DateTime          @default(now())\n  updated_at       DateTime          @updatedAt\n\n  // Relations\n  order Order @relation(fields: [order_id], references: [id], onDelete: Restrict)\n  user  User  @relation(fields: [user_id], references: [id], onDelete: Restrict)\n\n  @@index([order_id])\n  @@index([user_id])\n  @@index([status])\n  @@index([type])\n  @@index([created_at])\n  @@map(\"transactions\")\n}\n\n// ========================================\n// 4. SHOPPING FEATURES\n// ========================================\n\nmodel CartItem {\n  id         Int        @id @default(autoincrement())\n  user_id    Int\n  product_id Int\n  quantity   Int        @default(1)\n  status     CartStatus @default(ACTIVE)\n  created_at DateTime   @default(now())\n  updated_at DateTime   @updatedAt\n\n  // Relations\n  user    User    @relation(fields: [user_id], references: [id], onDelete: Cascade)\n  product Product @relation(fields: [product_id], references: [id], onDelete: Cascade)\n\n  @@unique([user_id, product_id, status])\n  @@index([user_id])\n  @@index([product_id])\n  @@map(\"cart_items\")\n}\n\nmodel WishlistItem {\n  id         Int      @id @default(autoincrement())\n  user_id    Int\n  product_id Int\n  created_at DateTime @default(now())\n\n  // Relations\n  user    User    @relation(fields: [user_id], references: [id], onDelete: Cascade)\n  product Product @relation(fields: [product_id], references: [id], onDelete: Cascade)\n\n  @@unique([user_id, product_id])\n  @@index([user_id])\n  @@index([product_id])\n  @@map(\"wishlist_items\")\n}\n\nmodel Coupon {\n  id           Int        @id @default(autoincrement())\n  code         String     @unique @db.VarChar(50)\n  name         String     @db.VarChar(255)\n  description  String?    @db.Text\n  type         CouponType\n  value        Decimal    @db.Decimal(10, 2)\n  min_amount   Decimal?   @db.Decimal(10, 2)\n  max_discount Decimal?   @db.Decimal(10, 2)\n  usage_limit  Int?\n  user_limit   Int? // Per user usage limit\n  used_count   Int        @default(0)\n  is_active    Boolean    @default(true)\n  starts_at    DateTime?\n  expires_at   DateTime?\n  created_at   DateTime   @default(now())\n  updated_at   DateTime   @updatedAt\n\n  @@index([code])\n  @@index([is_active])\n  @@index([expires_at])\n  @@map(\"coupons\")\n}\n\n// ========================================\n// 5. DISPUTE SYSTEM\n// ========================================\n\nmodel Dispute {\n  id          Int             @id @default(autoincrement())\n  order_id    Int\n  buyer_id    Int\n  seller_id   Int\n  reason      String          @db.VarChar(255)\n  description String?         @db.Text\n  status      DisputeStatus   @default(PENDING)\n  priority    DisputePriority @default(MEDIUM)\n  assigned_to Int? // Admin assigned to handle dispute\n  resolution  String?         @db.Text\n  resolved_at DateTime?\n  created_at  DateTime        @default(now())\n  updated_at  DateTime        @updatedAt\n\n  // Relations\n  order          Order             @relation(fields: [order_id], references: [id], onDelete: Restrict)\n  buyer          User              @relation(\"BuyerDisputes\", fields: [buyer_id], references: [id], onDelete: Restrict)\n  seller         User              @relation(\"SellerDisputes\", fields: [seller_id], references: [id], onDelete: Restrict)\n  assigned_admin User?             @relation(\"AssignedDisputes\", fields: [assigned_to], references: [id], onDelete: SetNull)\n  messages       DisputeMessage[]\n  evidence       DisputeEvidence[]\n\n  @@index([order_id])\n  @@index([buyer_id])\n  @@index([seller_id])\n  @@index([status])\n  @@index([priority])\n  @@index([assigned_to])\n  @@index([created_at])\n  @@map(\"disputes\")\n}\n\nmodel DisputeMessage {\n  id          Int      @id @default(autoincrement())\n  dispute_id  Int\n  sender_id   Int\n  message     String   @db.Text\n  is_internal Boolean  @default(false) // Admin-only messages\n  created_at  DateTime @default(now())\n\n  // Relations\n  dispute Dispute @relation(fields: [dispute_id], references: [id], onDelete: Cascade)\n  sender  User    @relation(fields: [sender_id], references: [id], onDelete: Restrict)\n\n  @@index([dispute_id])\n  @@index([sender_id])\n  @@index([created_at])\n  @@map(\"dispute_messages\")\n}\n\nmodel DisputeEvidence {\n  id          Int      @id @default(autoincrement())\n  dispute_id  Int\n  uploaded_by Int\n  file_url    String   @db.VarChar(500)\n  file_name   String   @db.VarChar(255)\n  file_type   String   @db.VarChar(50)\n  file_size   Int\n  description String?  @db.Text\n  created_at  DateTime @default(now())\n\n  // Relations\n  dispute Dispute @relation(fields: [dispute_id], references: [id], onDelete: Cascade)\n\n  @@index([dispute_id])\n  @@index([uploaded_by])\n  @@map(\"dispute_evidence\")\n}\n\n// ========================================\n// 6. SUPPORT SYSTEM\n// ========================================\n\nmodel Ticket {\n  id                Int            @id @default(autoincrement())\n  ticket_number     String         @unique @db.VarChar(50)\n  user_id           Int\n  subject           String         @db.VarChar(255)\n  message           String         @db.Text\n  status            TicketStatus   @default(OPEN)\n  priority          TicketPriority @default(MEDIUM)\n  category          String?        @db.VarChar(100)\n  assigned_to       Int?\n  resolved_at       DateTime?\n  first_response_at DateTime?\n  created_at        DateTime       @default(now())\n  updated_at        DateTime       @updatedAt\n\n  // Relations\n  user           User            @relation(\"UserTickets\", fields: [user_id], references: [id], onDelete: Restrict)\n  assigned_admin User?           @relation(\"AssignedTickets\", fields: [assigned_to], references: [id], onDelete: SetNull)\n  messages       TicketMessage[]\n\n  @@index([ticket_number])\n  @@index([user_id])\n  @@index([status])\n  @@index([priority])\n  @@index([assigned_to])\n  @@index([created_at])\n  @@map(\"tickets\")\n}\n\nmodel TicketMessage {\n  id          Int      @id @default(autoincrement())\n  ticket_id   Int\n  sender_id   Int\n  message     String   @db.Text\n  is_internal Boolean  @default(false)\n  created_at  DateTime @default(now())\n\n  // Relations\n  ticket Ticket @relation(fields: [ticket_id], references: [id], onDelete: Cascade)\n  sender User   @relation(fields: [sender_id], references: [id], onDelete: Restrict)\n\n  @@index([ticket_id])\n  @@index([sender_id])\n  @@index([created_at])\n  @@map(\"ticket_messages\")\n}\n\n// ========================================\n// 7. KYC SYSTEM\n// ========================================\n\nmodel KycVerification {\n  id          Int       @id @default(autoincrement())\n  user_id     Int\n  type        KycType\n  status      KycStatus @default(PENDING)\n  provider    String?   @db.VarChar(50) // Persona, etc.\n  external_id String?   @db.VarChar(255)\n  data        Json? // Verification data\n  documents   Json? // Document URLs/IDs\n  notes       String?   @db.Text\n  verified_at DateTime?\n  rejected_at DateTime?\n  expires_at  DateTime?\n  created_at  DateTime  @default(now())\n  updated_at  DateTime  @updatedAt\n\n  // Relations\n  user User @relation(fields: [user_id], references: [id], onDelete: Cascade)\n\n  @@unique([user_id, type])\n  @@index([user_id])\n  @@index([status])\n  @@index([type])\n  @@index([external_id])\n  @@map(\"kyc_verifications\")\n}\n\n// ========================================\n// 8. SECURITY SYSTEM\n// ========================================\n\nmodel PasswordReset {\n  id         Int       @id @default(autoincrement())\n  user_id    Int\n  token      String    @unique @db.VarChar(255)\n  expires_at DateTime\n  used_at    DateTime?\n  ip_address String?   @db.VarChar(45)\n  user_agent String?   @db.Text\n  created_at DateTime  @default(now())\n\n  // Relations\n  user User @relation(fields: [user_id], references: [id], onDelete: Cascade)\n\n  @@index([user_id])\n  @@index([token])\n  @@index([expires_at])\n  @@map(\"password_resets\")\n}\n\nmodel UserSession {\n  id               String    @id @default(cuid())\n  user_id          Int\n  device_name      String?   @db.VarChar(255)\n  device_type      String?   @db.VarChar(50)\n  ip_address       String    @db.VarChar(45)\n  user_agent       String?   @db.Text\n  location         String?   @db.VarChar(255)\n  is_active        Boolean   @default(true)\n  last_activity_at DateTime  @default(now())\n  expires_at       DateTime?\n  created_at       DateTime  @default(now())\n\n  // Relations\n  user User @relation(fields: [user_id], references: [id], onDelete: Cascade)\n\n  @@index([user_id])\n  @@index([is_active])\n  @@index([last_activity_at])\n  @@map(\"user_sessions\")\n}\n\n// ========================================\n// 9. ADMIN & AUDIT SYSTEM\n// ========================================\n\nmodel AdminAction {\n  id          Int      @id @default(autoincrement())\n  admin_id    Int\n  action_type String   @db.VarChar(100)\n  target_type String   @db.VarChar(50)\n  target_id   Int\n  description String?  @db.Text\n  metadata    Json?\n  ip_address  String?  @db.VarChar(45)\n  user_agent  String?  @db.Text\n  created_at  DateTime @default(now())\n\n  // Relations\n  admin User @relation(fields: [admin_id], references: [id], onDelete: Restrict)\n\n  @@index([admin_id])\n  @@index([action_type])\n  @@index([target_type])\n  @@index([target_id])\n  @@index([created_at])\n  @@map(\"admin_actions\")\n}\n\nmodel AuditLog {\n  id          Int      @id @default(autoincrement())\n  user_id     Int?\n  action      String   @db.VarChar(100)\n  entity_type String   @db.VarChar(50)\n  entity_id   Int\n  old_values  Json?\n  new_values  Json?\n  ip_address  String?  @db.VarChar(45)\n  user_agent  String?  @db.Text\n  created_at  DateTime @default(now())\n\n  // Relations\n  user User? @relation(fields: [user_id], references: [id], onDelete: SetNull)\n\n  @@index([user_id])\n  @@index([action])\n  @@index([entity_type])\n  @@index([entity_id])\n  @@index([created_at])\n  @@map(\"audit_logs\")\n}\n\nmodel SystemLog {\n  id         Int      @id @default(autoincrement())\n  level      LogLevel\n  message    String   @db.Text\n  context    Json?\n  user_id    Int?\n  ip_address String?  @db.VarChar(45)\n  user_agent String?  @db.Text\n  created_at DateTime @default(now())\n\n  @@index([level])\n  @@index([user_id])\n  @@index([created_at])\n  @@map(\"system_logs\")\n}\n\nmodel AdminInvite {\n  id         Int       @id @default(autoincrement())\n  email      String    @unique @db.VarChar(255)\n  invited_by Int\n  role_slug  String    @db.VarChar(50)\n  token      String    @unique @db.VarChar(255)\n  expires_at DateTime\n  used_at    DateTime?\n  created_at DateTime  @default(now())\n\n  @@index([email])\n  @@index([token])\n  @@index([expires_at])\n  @@map(\"admin_invites\")\n}\n\n// ========================================\n// 10. FINANCIAL SYSTEM\n// ========================================\n\nmodel Payout {\n  id           Int          @id @default(autoincrement())\n  seller_id    Int\n  amount       Decimal      @db.Decimal(10, 2)\n  fee_amount   Decimal      @default(0.00) @db.Decimal(10, 2)\n  net_amount   Decimal      @db.Decimal(10, 2)\n  currency     String       @default(\"USD\") @db.VarChar(3)\n  status       PayoutStatus @default(PENDING)\n  method       String?      @db.VarChar(50)\n  reference    String?      @db.VarChar(255)\n  description  String?      @db.Text\n  notes        String?      @db.Text\n  requested_at DateTime     @default(now())\n  processed_at DateTime?\n  completed_at DateTime?\n  failed_at    DateTime?\n  created_at   DateTime     @default(now())\n  updated_at   DateTime     @updatedAt\n\n  // Relations\n  seller User @relation(fields: [seller_id], references: [id], onDelete: Restrict)\n\n  @@index([seller_id])\n  @@index([status])\n  @@index([requested_at])\n  @@index([created_at])\n  @@map(\"payouts\")\n}\n\n// ========================================\n// ENUMS\n// ========================================\n\nenum ProductStatus {\n  DRAFT\n  PENDING\n  ACTIVE\n  SOLD\n  INACTIVE\n  REJECTED\n  SUSPENDED\n}\n\nenum OrderStatus {\n  PENDING\n  CONFIRMED\n  PROCESSING\n  SHIPPED\n  DELIVERED\n  COMPLETED\n  CANCELLED\n  REFUNDED\n}\n\nenum PaymentStatus {\n  PENDING\n  PAID\n  FAILED\n  REFUNDED\n  PARTIAL_REFUND\n}\n\nenum TransactionType {\n  PAYMENT\n  REFUND\n  PAYOUT\n  FEE\n  CHARGEBACK\n}\n\nenum TransactionStatus {\n  PENDING\n  PROCESSING\n  COMPLETED\n  FAILED\n  CANCELLED\n}\n\nenum CartStatus {\n  ACTIVE\n  SAVED_FOR_LATER\n  ABANDONED\n}\n\nenum CouponType {\n  PERCENTAGE\n  FIXED_AMOUNT\n  FREE_SHIPPING\n}\n\nenum DisputeStatus {\n  PENDING\n  INVESTIGATING\n  RESOLVED\n  CLOSED\n  ESCALATED\n}\n\nenum DisputePriority {\n  LOW\n  MEDIUM\n  HIGH\n  URGENT\n}\n\nenum TicketStatus {\n  OPEN\n  IN_PROGRESS\n  WAITING_FOR_CUSTOMER\n  RESOLVED\n  CLOSED\n}\n\nenum TicketPriority {\n  LOW\n  MEDIUM\n  HIGH\n  URGENT\n}\n\nenum KycType {\n  EMAIL\n  PHONE\n  IDENTITY\n  ADDRESS\n  BANK_ACCOUNT\n}\n\nenum KycStatus {\n  PENDING\n  IN_PROGRESS\n  APPROVED\n  REJECTED\n  EXPIRED\n}\n\nenum LogLevel {\n  DEBUG\n  INFO\n  WARN\n  ERROR\n  FATAL\n}\n\nenum PayoutStatus {\n  PENDING\n  PROCESSING\n  COMPLETED\n  FAILED\n  CANCELLED\n}\n",
  "inlineSchemaHash": "280ae254fb87f2412dd900531aed8bbd17912fba86673afcd53eefc4f2d42a96",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"username\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"avatar\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email_verified_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"phone_verified_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"is_active\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"is_banned\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"banned_until\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"ban_reason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"last_login_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"login_attempts\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"locked_until\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user_roles\",\"kind\":\"object\",\"type\":\"UserRole\",\"relationName\":\"UserToUserRole\"},{\"name\":\"products\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"ProductToUser\"},{\"name\":\"orders_as_buyer\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"BuyerOrders\"},{\"name\":\"orders_as_seller\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"SellerOrders\"},{\"name\":\"cart_items\",\"kind\":\"object\",\"type\":\"CartItem\",\"relationName\":\"CartItemToUser\"},{\"name\":\"wishlist_items\",\"kind\":\"object\",\"type\":\"WishlistItem\",\"relationName\":\"UserToWishlistItem\"},{\"name\":\"product_reviews\",\"kind\":\"object\",\"type\":\"ProductReview\",\"relationName\":\"ProductReviewToUser\"},{\"name\":\"disputes_as_buyer\",\"kind\":\"object\",\"type\":\"Dispute\",\"relationName\":\"BuyerDisputes\"},{\"name\":\"disputes_as_seller\",\"kind\":\"object\",\"type\":\"Dispute\",\"relationName\":\"SellerDisputes\"},{\"name\":\"assigned_disputes\",\"kind\":\"object\",\"type\":\"Dispute\",\"relationName\":\"AssignedDisputes\"},{\"name\":\"tickets\",\"kind\":\"object\",\"type\":\"Ticket\",\"relationName\":\"UserTickets\"},{\"name\":\"assigned_tickets\",\"kind\":\"object\",\"type\":\"Ticket\",\"relationName\":\"AssignedTickets\"},{\"name\":\"ticket_messages\",\"kind\":\"object\",\"type\":\"TicketMessage\",\"relationName\":\"TicketMessageToUser\"},{\"name\":\"dispute_messages\",\"kind\":\"object\",\"type\":\"DisputeMessage\",\"relationName\":\"DisputeMessageToUser\"},{\"name\":\"kyc_verifications\",\"kind\":\"object\",\"type\":\"KycVerification\",\"relationName\":\"KycVerificationToUser\"},{\"name\":\"password_resets\",\"kind\":\"object\",\"type\":\"PasswordReset\",\"relationName\":\"PasswordResetToUser\"},{\"name\":\"user_sessions\",\"kind\":\"object\",\"type\":\"UserSession\",\"relationName\":\"UserToUserSession\"},{\"name\":\"admin_actions\",\"kind\":\"object\",\"type\":\"AdminAction\",\"relationName\":\"AdminActionToUser\"},{\"name\":\"audit_logs\",\"kind\":\"object\",\"type\":\"AuditLog\",\"relationName\":\"AuditLogToUser\"},{\"name\":\"payouts\",\"kind\":\"object\",\"type\":\"Payout\",\"relationName\":\"PayoutToUser\"},{\"name\":\"transactions\",\"kind\":\"object\",\"type\":\"Transaction\",\"relationName\":\"TransactionToUser\"}],\"dbName\":\"users\"},\"Role\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"slug\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"permissions\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"is_active\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user_roles\",\"kind\":\"object\",\"type\":\"UserRole\",\"relationName\":\"RoleToUserRole\"}],\"dbName\":\"roles\"},\"UserRole\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"role_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"granted_by\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"granted_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"expires_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToUserRole\"},{\"name\":\"role\",\"kind\":\"object\",\"type\":\"Role\",\"relationName\":\"RoleToUserRole\"}],\"dbName\":\"user_roles\"},\"Category\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"slug\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"image\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"parent_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"sort_order\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"is_active\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"products\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"CategoryToProduct\"},{\"name\":\"parent\",\"kind\":\"object\",\"type\":\"Category\",\"relationName\":\"CategoryHierarchy\"},{\"name\":\"children\",\"kind\":\"object\",\"type\":\"Category\",\"relationName\":\"CategoryHierarchy\"}],\"dbName\":\"categories\"},\"Product\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"slug\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"price\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"discount_price\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"category_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"seller_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"platform\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"game\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"account_level\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"account_username\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"ProductStatus\"},{\"name\":\"stock_quantity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"delivery_time\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"setup_instructions\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"views_count\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"sales_count\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"rating_avg\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"rating_count\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"is_featured\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"featured_until\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"deleted_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"category\",\"kind\":\"object\",\"type\":\"Category\",\"relationName\":\"CategoryToProduct\"},{\"name\":\"seller\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ProductToUser\"},{\"name\":\"images\",\"kind\":\"object\",\"type\":\"ProductImage\",\"relationName\":\"ProductToProductImage\"},{\"name\":\"reviews\",\"kind\":\"object\",\"type\":\"ProductReview\",\"relationName\":\"ProductToProductReview\"},{\"name\":\"cart_items\",\"kind\":\"object\",\"type\":\"CartItem\",\"relationName\":\"CartItemToProduct\"},{\"name\":\"order_items\",\"kind\":\"object\",\"type\":\"OrderItem\",\"relationName\":\"OrderItemToProduct\"},{\"name\":\"wishlist_items\",\"kind\":\"object\",\"type\":\"WishlistItem\",\"relationName\":\"ProductToWishlistItem\"}],\"dbName\":\"products\"},\"ProductImage\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"product_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"image_url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"alt_text\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sort_order\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"is_primary\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"product\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"ProductToProductImage\"}],\"dbName\":\"product_images\"},\"ProductReview\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"product_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"order_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"rating\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"comment\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"is_verified\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"helpful_count\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"product\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"ProductToProductReview\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ProductReviewToUser\"}],\"dbName\":\"product_reviews\"},\"Order\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"order_number\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"buyer_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"seller_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"subtotal\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"service_fee\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"discount_amount\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"total_amount\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"OrderStatus\"},{\"name\":\"payment_status\",\"kind\":\"enum\",\"type\":\"PaymentStatus\"},{\"name\":\"payment_method\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"payment_transaction_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"buyer_email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"buyer_phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"payment_completed_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"delivered_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"completed_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"cancelled_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"refunded_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"buyer\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"BuyerOrders\"},{\"name\":\"seller\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"SellerOrders\"},{\"name\":\"items\",\"kind\":\"object\",\"type\":\"OrderItem\",\"relationName\":\"OrderToOrderItem\"},{\"name\":\"transactions\",\"kind\":\"object\",\"type\":\"Transaction\",\"relationName\":\"OrderToTransaction\"},{\"name\":\"disputes\",\"kind\":\"object\",\"type\":\"Dispute\",\"relationName\":\"DisputeToOrder\"}],\"dbName\":\"orders\"},\"OrderItem\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"order_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"product_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"product_name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"quantity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"unit_price\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"total_price\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"order\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"OrderToOrderItem\"},{\"name\":\"product\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"OrderItemToProduct\"}],\"dbName\":\"order_items\"},\"Transaction\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"order_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"TransactionType\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"fee_amount\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"net_amount\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"currency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"payment_method\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"TransactionStatus\"},{\"name\":\"reference\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"gateway\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"gateway_response\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"processed_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"order\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"OrderToTransaction\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"TransactionToUser\"}],\"dbName\":\"transactions\"},\"CartItem\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"product_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"quantity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"CartStatus\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"CartItemToUser\"},{\"name\":\"product\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"CartItemToProduct\"}],\"dbName\":\"cart_items\"},\"WishlistItem\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"product_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToWishlistItem\"},{\"name\":\"product\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"ProductToWishlistItem\"}],\"dbName\":\"wishlist_items\"},\"Coupon\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"code\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"CouponType\"},{\"name\":\"value\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"min_amount\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"max_discount\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"usage_limit\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user_limit\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"used_count\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"is_active\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"starts_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"expires_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"coupons\"},\"Dispute\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"order_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"buyer_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"seller_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"reason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"DisputeStatus\"},{\"name\":\"priority\",\"kind\":\"enum\",\"type\":\"DisputePriority\"},{\"name\":\"assigned_to\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"resolution\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"resolved_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"order\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"DisputeToOrder\"},{\"name\":\"buyer\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"BuyerDisputes\"},{\"name\":\"seller\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"SellerDisputes\"},{\"name\":\"assigned_admin\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AssignedDisputes\"},{\"name\":\"messages\",\"kind\":\"object\",\"type\":\"DisputeMessage\",\"relationName\":\"DisputeToDisputeMessage\"},{\"name\":\"evidence\",\"kind\":\"object\",\"type\":\"DisputeEvidence\",\"relationName\":\"DisputeToDisputeEvidence\"}],\"dbName\":\"disputes\"},\"DisputeMessage\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"dispute_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"sender_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"message\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"is_internal\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"dispute\",\"kind\":\"object\",\"type\":\"Dispute\",\"relationName\":\"DisputeToDisputeMessage\"},{\"name\":\"sender\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"DisputeMessageToUser\"}],\"dbName\":\"dispute_messages\"},\"DisputeEvidence\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"dispute_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"uploaded_by\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"file_url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"file_name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"file_type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"file_size\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"dispute\",\"kind\":\"object\",\"type\":\"Dispute\",\"relationName\":\"DisputeToDisputeEvidence\"}],\"dbName\":\"dispute_evidence\"},\"Ticket\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"ticket_number\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"subject\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"message\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"TicketStatus\"},{\"name\":\"priority\",\"kind\":\"enum\",\"type\":\"TicketPriority\"},{\"name\":\"category\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"assigned_to\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"resolved_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"first_response_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserTickets\"},{\"name\":\"assigned_admin\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AssignedTickets\"},{\"name\":\"messages\",\"kind\":\"object\",\"type\":\"TicketMessage\",\"relationName\":\"TicketToTicketMessage\"}],\"dbName\":\"tickets\"},\"TicketMessage\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"ticket_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"sender_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"message\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"is_internal\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"ticket\",\"kind\":\"object\",\"type\":\"Ticket\",\"relationName\":\"TicketToTicketMessage\"},{\"name\":\"sender\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"TicketMessageToUser\"}],\"dbName\":\"ticket_messages\"},\"KycVerification\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"KycType\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"KycStatus\"},{\"name\":\"provider\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"external_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"data\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"documents\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"verified_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"rejected_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"expires_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"KycVerificationToUser\"}],\"dbName\":\"kyc_verifications\"},\"PasswordReset\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expires_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"used_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"ip_address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user_agent\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"PasswordResetToUser\"}],\"dbName\":\"password_resets\"},\"UserSession\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"device_name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"device_type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ip_address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user_agent\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"location\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"is_active\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"last_activity_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"expires_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToUserSession\"}],\"dbName\":\"user_sessions\"},\"AdminAction\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"admin_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"action_type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"target_type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"target_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"ip_address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user_agent\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"admin\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AdminActionToUser\"}],\"dbName\":\"admin_actions\"},\"AuditLog\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"action\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"entity_type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"entity_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"old_values\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"new_values\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"ip_address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user_agent\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AuditLogToUser\"}],\"dbName\":\"audit_logs\"},\"SystemLog\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"level\",\"kind\":\"enum\",\"type\":\"LogLevel\"},{\"name\":\"message\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"context\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"ip_address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user_agent\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"system_logs\"},\"AdminInvite\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"invited_by\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"role_slug\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expires_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"used_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"admin_invites\"},\"Payout\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"seller_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"fee_amount\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"net_amount\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"currency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"PayoutStatus\"},{\"name\":\"method\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"reference\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"requested_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"processed_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"completed_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"failed_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"seller\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"PayoutToUser\"}],\"dbName\":\"payouts\"}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

